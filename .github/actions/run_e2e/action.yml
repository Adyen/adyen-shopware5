name: 'Run E2E Tests'
description: "Runs Adyen Shopware E2E Tests"


inputs:
  GH_PAT:
    description: "Personal access token for the repository"
    required: true
  SHOPWARE:
    description: "The Shopware version that is used to run the tests."
    required: true
  PHP:
    description: "The PHP Version that is used for the Shopware container."
    required: true
  NODE:
    description: "The Node Version that is used for the E2E Tests."
    required: true
  _SHOP_DOMAIN:
    description: 'This domain will be used in Playwright as BASE_URL'
    default: 'adyen.shopware'
    required: false
  _ZIP_FILE:
    description: 'This is the defined filename of the ZIP file that we use for the installation of the plugin'
    default: '~/.build/AdyenPayment.zip'
    required: false
runs:
  using: "composite"
  steps:

    - name: Download Docker
      shell: bash
      run: docker pull -q dockware/play:${{ inputs.SHOPWARE }}

    - name: Start Docker
      shell: bash
      run: |
        docker run -p 80:80 --name shop --env PHP_VERSION=${{ inputs.PHP }} -d dockware/play:${{ inputs.SHOPWARE }}
        sleep 30
        sudo echo "127.0.0.1 ${{ inputs._SHOP_DOMAIN }}" | sudo tee -a /etc/hosts
        docker exec shop bash -c "mysql -h 127.0.0.1 -u root -proot shopware -e \"UPDATE s_core_shops SET host = '${{ inputs._SHOP_DOMAIN }}', hosts = '', secure = 0;\""

    - name: Upload ZIP File to Docker
      shell: bash
      run: |
        docker cp ${{ inputs._ZIP_FILE }} shop:/var/www/html/custom/plugins/AdyenPayment.zip
        docker exec shop bash -c 'cd /var/www/html/custom/plugins && unzip -qq -o AdyenPayment.zip'

    - name: Install Plugin
      shell: bash
      run: |
        docker exec shop bash -c 'php bin/console sw:plugin:refresh'
        docker exec shop bash -c 'php bin/console sw:plugin:install --activate AdyenPayment'
        docker exec shop bash -c 'php bin/console sw:cache:clear'
    
    - name: Clone Code
      uses: actions/checkout@v3
      with:
        repository: nikola-buzej/AutomatedTestPlayground
        path: tests
        token: ${{ inputs.GH_PAT }}
    - name: Navigate to tests
      shell: bash
      run: cd ./tests
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{inputs.NODE}}
    - name: Install Node dependencies
      run: npm install
      shell: bash
    - name: Install Playwright Browsers
      shell: bash
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      shell: bash
      run: npx playwright test
      env:
        PLAYWRIGHT_TEST_BASE_URL: ${{ inputs._SHOP_DOMAIN }}
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30  