name: 'Run E2E Tests'
description: "Runs Adyen Shopware E2E Tests"

inputs:
  GH_PAT:
    description: "Personal access token for the repository"
    required: true
  SHOPWARE:
    description: "The Shopware version that is used to run the tests."
    required: true
  PHP:
    description: "The PHP Version that is used for the Shopware container."
    required: true
  BASE_URL:
    description: "The base url of the shop."
    required: true
  SUBDOMAIN:
    description: "The subdomain url of the shop."
    required: true
  PORT:
    description: "The port of the shop."
    required: true
  NODE:
    description: "The Node Version that is used for the E2E Tests."
    required: true
  NGROK_TOKEN:
    description: "The Ngrok authentication token"
    required: true
  _ZIP_FILE:
    description: 'This is the defined filename of the ZIP file that we use for the installation of the plugin'
    default: '~/.build/AdyenPayment.zip'
    required: false
runs:
  using: "composite"
  steps:

    - name: Download Docker
      shell: bash
      run: docker pull -q dockware/play:${{ inputs.SHOPWARE }}

    - name: Start Docker
      shell: bash
      run: |
        docker run -p ${{ inputs.PORT }}:80 --name shop --env PHP_VERSION=${{ inputs.PHP }} -d dockware/play:${{ inputs.SHOPWARE }}
        sleep 30
        docker exec shop bash -c "mysql -h 127.0.0.1 -u root -proot shopware -e \"UPDATE s_core_shops SET host = '${{ inputs.SUBDOMAIN }}', hosts = '', secure = 0;\""

    - name: Upload ZIP File to Docker
      shell: bash
      run: |
        docker cp ${{ inputs._ZIP_FILE }} shop:/var/www/html/custom/plugins/AdyenPayment.zip
        docker exec shop bash -c 'cd /var/www/html/custom/plugins && unzip -qq -o AdyenPayment.zip'

    - name: Install Plugin
      shell: bash
      run: |
        docker exec shop bash -c 'php bin/console sw:plugin:refresh'
        docker exec shop bash -c 'php bin/console sw:plugin:install --activate AdyenPayment'
        docker exec shop bash -c 'php bin/console sw:cache:clear'

    - name: Download Ngrok
      run: wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
      shell: bash
    - name: Unzip Ngrok
      run: unzip -qq -o ngrok-stable-linux-amd64.zip
      shell: bash
    - name: Authenticate Ngrok
      run: ./ngrok authtoken ${{ inputs.NGROK_TOKEN }}
      shell: bash
    - name: Run Ngrok
      run: ./ngrok http -region=us -subdomain=${{ matrix.subdomain }} ${{ matrix.port }} > ngrok.log &
      shell: bash
    - name: Waiting for Ngrok tunnel
      shell: bash
      run: |
        URL="${{ matrix.url }}"
        
        while true; do
          response=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
          if [ "$response" = "302" ]; then
            echo "URL is returning 302 HTTP status code, Ngrok tunnel is reached, good to go!"
            break  # Exit the loop if the response is 302
          else
            echo "URL is not ready yet, because Ngrok sessions are all in use at the moment, please wait. Retrying to build the Ngrok tunnel again in 5 seconds..."
            sleep 5  # Wait for 5 seconds before retrying
            ./ngrok http -region=us -subdomain=${{ matrix.subdomain }} ${{ matrix.port }} > ngrok.log &
          fi
        done      

    - name: Clone Code
      uses: actions/checkout@v3
      with:
        repository: nikola-buzej/AutomatedTestPlayground
        path: tests
        token: ${{ inputs.GH_PAT }}
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.NODE }}
    - name: Install Node dependencies
      working-directory: ./tests
      run:
        npm install
      shell: bash
    - name: Install Playwright Browsers
      working-directory: ./tests
      shell: bash
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      shell: bash
      working-directory: ./tests
      run: npx playwright test
      env:
        PLAYWRIGHT_TEST_BASE_URL: ${{ inputs.BASE_URL }}
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report-Shopware-${{ inputs.SHOPWARE }}-PHP-${{ inputs.PHP }}
        path: ./tests/playwright-report/
        retention-days: 30  